// -- user code here --
import Ball from './prefabs/Ball';
import Paddle from './prefabs/Paddle';
import Back from './prefabs/Back';
import Heart from './prefabs/Heart';
import Hold from './prefabs/Hold';
import BallTool from './prefabs/BallTool';
import Restart from './prefabs/Restart';
import RandomObj from './prefabs/RandomObj';
import MuteBtn from './prefabs/MuteBtn';

import Facade from '../../src/puremvc/core/patterns/facade/Facade';
/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


class MultiPlayer extends Phaser.State {
	
	/**
	 * MultiPlayer.
	 */
	constructor() {
		
		super();
		
	}
	
	init() {
		
		this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
		
	}
	
	preload () {
		
	}
	
	create() {
		
		this.fStarfield = this.add.tileSprite(0, 0, this.game.width, this.game.height, 'starfield', null);
		
		var _main = this.add.group();
		
		var _holds = this.add.group(_main);
		
		var _hold_down = new Hold(this.game, 99, 380);
		_holds.add(_hold_down);
		
		var _hold_up = new Hold(this.game, 99, 0);
		_holds.add(_hold_up);
		
		var _paddles = this.add.group(_main);
		
		var _paddle_down = new Paddle(this.game, _paddles, 'paddle_down', undefined, true, Phaser.Physics.ARCADE);
		_paddle_down.position.setTo(125, 420);
		
		var _paddle_up = new Paddle(this.game, _paddles, 'paddle_up', undefined, true, Phaser.Physics.ARCADE);
		_paddle_up.position.setTo(125, 41);
		
		var _texts = this.add.group(_main);
		
		var _info_up = this.add.text(124, 160, 'infoText', {"font":"bold 30px Arial","fill":"#ffffff","stroke":"#ffffff"}, _texts);
		_info_up.angle = -180.0;
		_info_up.anchor.setTo(0.5, 0.5);
		
		var _info_down = this.add.text(124, 305, 'infoText', {"font":"bold 30px Arial","fill":"#ffffff","stroke":"#ffffff"}, _texts);
		_info_down.anchor.setTo(0.5, 0.5);
		
		var _randomObj = new RandomObj(this.game, 242, 121);
		_main.add(_randomObj);
		
		var _restart = new Restart(this.game, 145, 220);
		_main.add(_restart);
		
		var _ball = new Ball(this.game, 151, 370);
		_main.add(_ball);
		
		var _hearts = this.add.group();
		
		var _heart_up = new Heart(this.game, 32, 32);
		_heart_up.angle = 180.0;
		_hearts.add(_heart_up);
		
		var _heart_down = new Heart(this.game, 304, 440);
		_hearts.add(_heart_down);
		
		var _backs = this.add.group();
		
		var _back_down = new Back(this.game, 0, 431);
		_backs.add(_back_down);
		
		var _back_up = new Back(this.game, 295, 0);
		_back_up.angle = 180.0;
		_backs.add(_back_up);
		
		var _ballTool = new BallTool(this.game);
		_ballTool.position.setTo(92, 424);
		
		var _mute = new MuteBtn(this.game, 25, 413);
		this.add.existing(_mute);
		
		
		
		// public fields
		
		this.fMain = _main;
		this.fHolds = _holds;
		this.fHold_down = _hold_down;
		this.fHold_up = _hold_up;
		this.fPaddle_down = _paddle_down;
		this.fPaddle_up = _paddle_up;
		this.fInfo_up = _info_up;
		this.fInfo_down = _info_down;
		this.fRandomObj = _randomObj;
		this.fRestart = _restart;
		this.fBall = _ball;
		this.fHeart_up = _heart_up;
		this.fHeart_down = _heart_down;
		this.fBack_down = _back_down;
		this.fBack_up = _back_up;
		this.fBallTool = _ballTool;
		this.fMute = _mute;
		// user code
		this.initObjects();
		Facade.getInstance('Game').sendNotification('GAME_SCENE_CHANGED');
		
	}
	
	/* state-methods-begin */
	// -- user code here --
	initObjects() {
		var paddingHeight = -10;
		var paddingWidth = -10;

		this.fHold_up.width = this.fPaddle_up.width;
		this.fHold_down.width = this.fPaddle_down.width;
		this.fHold_up.alignIn(this.game.world.bounds, Phaser.TOP_CENTER, 0, paddingHeight * 2);
		this.fHold_down.alignIn(this.game.world.bounds, Phaser.BOTTOM_CENTER, 0, paddingHeight * 2);

		this.fHeart_up.alignIn(this.game.world.bounds, Phaser.TOP_LEFT, paddingWidth, paddingHeight);
		this.fHeart_down.alignIn(this.game.world.bounds, Phaser.BOTTOM_RIGHT, paddingWidth, paddingHeight);

		this.fBack_up.alignIn(this.game.world.bounds, Phaser.TOP_RIGHT, paddingWidth, paddingHeight);
		this.fBack_down.alignIn(this.game.world.bounds, Phaser.BOTTOM_LEFT, paddingWidth, paddingHeight);

		this.fBallTool.alignIn(this.game.world.bounds, Phaser.BOTTOM_CENTER, 0, paddingHeight);
		this.fBallTool.paddingHeight = paddingHeight;

		this.fInfo_up.alignIn(this.game.world.bounds, Phaser.TOP_CENTER, 0, -this.game.height / 4);
		this.fInfo_down.alignIn(this.game.world.bounds, Phaser.BOTTOM_CENTER, 0, -this.game.height / 4);

		this.fRestart.alignIn(this.game.world.bounds, Phaser.CENTER);

		var mask = this.game.add.graphics(0, 0);
		mask.beginFill(0xffffff);
		mask.drawRect(0, 50, this.game.width, this.game.height - 100);
		this.fMain.mask = mask;
		this.fStarfield.mask = mask;
	}

	// TODO:
	// 再看看有沒有辦法用 .bind 的方式把 shutdown() 搬進場景的 Mediator 中
	shutdown() {
		Facade.getInstance('Game').sendNotification('GAME_SCENE_SHUTDOWN');
	}
	/* state-methods-end */
	
}
/* --- end generated code --- */
// -- user code here --
export default MultiPlayer;